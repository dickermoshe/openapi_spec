components:
  schemas:
    person:
      allOf:
      - $ref: '#/components/schemas/personForCreation'
      - properties:
          id:
            format: int32
            type: integer
      required:
      - id
    personForCreation:
      allOf:
      - $ref: '#/components/schemas/personForUpdate'
      required:
      - firstName
      - name
      - email
    personForUpdate:
      properties:
        address:
          maxLength: 255
          type: string
        birthDate:
          format: date
          type: string
        city:
          maxLength: 255
          type: string
        email:
          format: email
          type: string
        firstName:
          maxLength: 255
          type: string
        name:
          maxLength: 255
          type: string
        nationality:
          maxLength: 255
          type: string
        phoneNumber:
          pattern: ^((\+)33|0)[1-9](\d{2}){4}$
          type: string
        postalCode:
          maxLength: 255
          type: string
info:
  license:
    name: MIT
  title: Example
  version: 1.0.0
openapi: 3.0.1
paths:
  /person/display/{personId}:
    get:
      operationId: list
      parameters:
      - description: The id of the person to retrieve
        in: path
        name: personId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: OK
servers:
- url: http://api.example.xyz/v1
